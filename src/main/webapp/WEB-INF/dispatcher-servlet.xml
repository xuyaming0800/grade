<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.1.xsd    
    					http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
	<context:component-scan base-package="cn.com.hzbank.grade.web.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<context:annotation-config />
	<aop:aspectj-autoproxy />

	<mvc:annotation-driven validator="validator" />

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!--资源 -->
	<mvc:resources location="/WEB-INF/resources/" mapping="/resources/**" />

	<!-- 配置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- Creates RequestMappingInfo instances from type and method-level @RequestMapping 
		annotations in @Controller classes. -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />

	<!-- 自定义类型绑定 -->
	<bean id="bindingInitializer" class="cn.com.hzbank.grade.web.util.BindingInitializer" />

	<!-- 开启MVC的JSON功能。可以使用@ResponseBody和@RequestBody来输出和输入JSON串 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain; charset=UTF-8</value>
				<value>application/json; charset=UTF-8</value>
				<value>application/javascript; charset=UTF-8</value>
				<value>text/json; charset=UTF-8</value>
				<value>text/javascript; charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
	</bean>
	<!-- <bean id="jaxb2RootElementHttpMessageConverter" -->
	<!-- class=" org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter"> -->
	<!-- <property name="supportedMediaTypes"> -->
	<!-- <list> -->
	<!-- <bean class="org.springframework.http.MediaType"> -->
	<!-- <constructor-arg value="text" /> -->
	<!-- <constructor-arg value="xml" /> -->
	<!-- <constructor-arg value="gbk" /> -->
	<!-- </bean> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->





	<!-- 方法注解适配器 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer" ref="bindingInitializer">
		</property>
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<!-- <ref bean="jaxb2RootElementHttpMessageConverter" /> -->
				<ref bean="mappingJacksonHttpMessageConverter" />

			</list>
		</property>
	</bean>

	<!-- 开启文件上传功能。注意：id一定要是multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="104857600" />
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<mvc:default-servlet-handler />

	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找 -->
				<value>classpath:messages</value>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60" />
	</bean>

</beans>